service: particle-backend

frameworkVersion: ">=1.1.0 <2.0.0"
provider:
  name: aws
  tracing: true
  profile: private
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  environment:
    EVENT_TABLE: "${self:service}-events-${opt:stage, self:provider.stage}"
    PRIMARY_KEY: "id"
  apiKeys:
    - name: particle1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    - Effect: "Allow"
      Action:
        - s3:DeleteObject
        - s3:GetObject
        - s3:ListBucket
        - s3:PutObject
        - s3:GetBucketPolicy
      Resource: "*"
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"


functions:
  StoreEvent:
    handler: handler.upload
    memorySize: 128
    description: Handling Webhooks from Particle.io to store  in DynamoDB
    events:
      - http:
          path: particle-webhook
          method: post
          cors: true
          private: true
  GetEvents:
    handler: handler.events
    memorySize: 128
    description: Getting events from Particle.io from DynamoDB
    events:
      - http:
          path: events/{event_name}
          method: get
          cors: true
          private: true

resources:
  Resources:
    EventsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        BillingMode: "PAY_PER_REQUEST"
        TableName: ${self:provider.environment.EVENT_TABLE}
