!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@angular/platform-browser"),require("@angular/common")):"function"==typeof define&&define.amd?define("@uibakery/kit",["exports","@angular/core","@angular/platform-browser","@angular/common"],r):r(((e=e||self).uibakery=e.uibakery||{},e.uibakery.kit={}),e.ng.core,e.ng.platformBrowser,e.ng.common)}(this,function(e,r,t,i){"use strict";var s=function(){function e(e){this.sanitizer=e}return e.prototype.transform=function(e,r){if(!e)return null;switch(r){case"html":return this.sanitizer.bypassSecurityTrustHtml(e);case"style":return this.sanitizer.bypassSecurityTrustStyle(e);case"script":return this.sanitizer.bypassSecurityTrustScript(e);case"url":return this.sanitizer.bypassSecurityTrustUrl(e);case"resourceUrl":return this.sanitizer.bypassSecurityTrustResourceUrl(e);default:throw new Error("Invalid safe type specified: "+r)}},e.decorators=[{type:r.Pipe,args:[{name:"safe"}]}],e.ctorParameters=function(){return[{type:t.DomSanitizer}]},e}(),n=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[i.CommonModule],declarations:[s],exports:[s]}]}],e}();e.BkPipeModule=n,e.BkSafePipe=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=uibakery-kit.umd.min.js.map