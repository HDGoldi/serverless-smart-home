@mixin alignment-styles() {

  .space {
    flex-wrap: wrap;
    display: flex;
  }

  .right {
    margin-left: auto;
  }

  .left {
    margin-right: auto;
  }

  .space.direction-row {
    flex-direction: row;
  }

  .space.direction-column {
    flex-direction: column;
  }

  .space.space-container {
    align-content: stretch;
    align-items: stretch;
  }

  // Generate grid classes
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      width: percentage($i / 12);
    }
  }

  @media (max-width: 600px) {
    [class*="col-"] {
      width: 100%;
    }
  }
}

@mixin text-styles() {

  .italic {
    font-style: italic;
  }

  .bold {
    font-weight: 800;
  }

  .underline {
    text-decoration: underline;
  }

  .text-decoration-none {
    text-decoration: none;
  }

  h1, h2, h3, h4, h5, h6, p {
    margin: 0;
  }

  .text-white {
    color: #ffffff;
  }

}

@mixin icon-styles() {

    nb-icon.basic {
      color: nb-theme(text-basic-color);
    }

    nb-icon.alternate {
      color: nb-theme(text-alternate-color);
    }

    nb-icon.disabled {
      color: nb-theme(text-disabled-color);
    }

    nb-icon.hint {
      color: nb-theme(text-hint-color);
    }

    nb-icon.primary {
      color: nb-theme(text-primary-color);
    }

    nb-icon.success {
      color: nb-theme(text-success-color);
    }

    nb-icon.info {
      color: nb-theme(text-info-color);
    }

    nb-icon.warning {
      color: nb-theme(text-warning-color);
    }

    nb-icon.danger {
      color: nb-theme(text-danger-color);
    }

    nb-icon.tiny {
      font-size: 0.75rem;
    }

    nb-icon.small {
      font-size: 1rem;
    }

    nb-icon {
      font-size: 1.25rem;
    }

    nb-icon.large {
      font-size: 1.5rem;
    }

    nb-icon.giant {
      font-size: 2rem;
    }

}

@mixin table-styles() {

  table.table {
    border-collapse: collapse;
    border-spacing: 0;
    table-layout: fixed;

    @each $status in nb-get-statuses() {

      &.background-#{$status} {
        background-color: nb-theme(color-#{$status}-default);
      }
    }

    &.background-alternate {
      background-color: nb-theme(background-alternative-color-1);
    }

    &.background-disabled {
      background-color: nb-theme(bg-disabled-color);
    }

    &.background-hint {
      background-color: nb-theme(bg-hint-color);
    }

    &.border {

      > thead > th, > tbody > tr > td {
        border: 1px solid nb-theme(table-border-color);
      }

      @each $status in nb-get-statuses() {

        &.background-#{$status} {
          > thead > th, > tbody > tr > td {
            border: 1px solid nb-theme(color-#{$status}-600);
          }
        }

        &.background-alternate {
          > thead > th, > tbody > tr > td {
            border: 1px solid nb-theme(border-alternative-color-3);
          }
        }

        &.background-disabled {
          > thead > th, > tbody > tr > td {
            border: 1px solid nb-theme(table-disabled-border-color);
          }
        }

        &.background-hint {
          > thead > th, > tbody > tr > td {
            border: 1px solid nb-theme(table-hint-border-color);
          }
        }
      }
    }

    td, th {
      padding: 0;
    }
  }
}

@mixin smart-table-styles() {

  // Styles from nebular (@nebular/src/framework/theme/styles/global/tables/_smart-table.theme.scss) sometimes has not
  // not enough power for overriding table styles. Thats why we have addition styles
  .layout-container[class] ng2-smart-table {
    table tr th,
    table tr th a {
      font-family: nb-theme(smart-table-header-font-family);
      font-size: nb-theme(smart-table-header-font-size);
      font-weight: nb-theme(smart-table-header-font-weight);
      line-height: nb-theme(smart-table-header-line-height);
      color: nb-theme(smart-table-header-fg);
    }

    table tr td {
      font-family: nb-theme(smart-table-font-family);
      font-size: nb-theme(smart-table-font-size);
      font-weight: nb-theme(smart-table-font-weight);
      line-height: nb-theme(smart-table-line-height);
      color: nb-theme(smart-table-fg);
    }

    table tr th,
    table tr td {
      position: relative;
      padding: nb-theme(smart-table-padding);
      border: 1px solid nb-theme(smart-table-separator);
      vertical-align: middle;
    }

    table tr.ng2-smart-titles {
      th {
        padding: nb-theme(smart-table-padding);
        @include nb-ltr(padding-right, 1.75rem);
        @include nb-rtl(padding-left, 1.75rem);
      }

      th a {
        &:hover, &:active, &:visited {
          color: nb-theme(smart-table-header-fg);
          text-decoration: none;
        }
        &.sort.asc, &.sort.desc {

          font-weight: nb-theme(smart-table-header-font-weight);

          &::after {
            border-bottom-color: nb-theme(smart-table-fg-secondary);
            border-width: 0.375rem;
            position: absolute;
            margin: 0;
            @include nb-ltr(right, 0.75rem);
            @include nb-rtl(left, 0.75rem);
            top: 50%;
            transform: translate(0, -50%);
          }

          &.desc::after {
            transform: translate(0, -50%) rotate(180deg);
          }
        }
      }
    }

    thead tr {
      background: nb-theme(smart-table-header-bg);

      &.ng2-smart-filters th {
        padding: nb-theme(smart-table-filter-padding);

        .ng2-smart-filter input {
          line-height: nb-theme(smart-table-line-height);
        }
      }
    }

    tbody tr {
      &.selected, &:hover {
        background: nb-theme(smart-table-bg-active) !important;
      }

      &:nth-child(2n) {
        background-color: nb-theme(smart-table-bg-even);
      }
    }

    // Actions
    th.ng2-smart-actions-title-add {
      a {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1rem !important;
        padding: nb-theme(smart-table-filter-padding);
        background: nb-theme(color-success-500);
        color: #ffffff;
        border-radius: 0.375rem;

        &:hover {
          text-decoration: none;
        }
      }
    }

    .ng2-smart-actions {
      padding: 0;
      // fix for 100% height child
      height: 1px;

      ng2-st-tbody-edit-delete, ng2-st-tbody-create-cancel, ng2-st-actions {
        display: flex;
        height: 100%;
      }

      a.ng2-smart-action {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        width: 100%;

        font-size: 0.75rem !important;
        color: nb-theme(smart-table-fg-secondary);

        &:not(:last-child) {
          border-right: 1px solid nb-theme(smart-table-separator);
        }

        &:hover {
          text-decoration: none;
        }
      }

      .ng2-smart-action-add-create:hover,
      .ng2-smart-action-edit-edit:hover,
      .ng2-smart-action-edit-save:hover {
        color: nb-theme(color-success-500);
      }

      .ng2-smart-action-add-cancel:hover,
      .ng2-smart-action-delete-delete:hover,
      .ng2-smart-action-edit-cancel:hover {
        color: nb-theme(color-danger-500);
      }
    }

    table-cell-edit-mode {
      display: block;
      margin: -7.5px -12px;
    }

    ng2-smart-table-pager {
      display: block;
    }

    //Paging
    nav.ng2-smart-pagination-nav {
      display: flex;
      justify-content: center;
      margin-top: 1.25rem;


      .ng2-smart-pagination {
        display: flex;
        padding: 0;

        .page-item.disabled .page-link, .page-item.disabled .page-link:focus, .page-item.disabled .page-link:hover {
          background-color: nb-theme(smart-table-paging-hover);
          color: nb-theme(button-outline-success-text-color);
        }
      }

      .pagination {
        font-family: nb-theme(button-text-font-family);
        font-size: nb-theme(button-medium-text-font-size);
        line-height: nb-theme(button-medium-text-line-height);
        border: nb-theme(smart-table-paging-border-color) solid nb-theme(smart-table-paging-border-width);
        border-radius: nb-theme(smart-table-border-radius);

        li {
          &:not(:last-child) {
            @include nb-ltr(border-right, 1px solid nb-theme(smart-table-separator));
            @include nb-rtl(border-left, 1px solid nb-theme(smart-table-separator));
          }

          a.page-link-prev, a.page-link-next {
            font-size: nb-theme(button-medium-text-font-size);
          }

          a, > span {
            background: transparent;
            color: nb-theme(button-outline-success-text-color);
            padding: 0.75rem 1.25rem;
            border: none;

            &:hover {
              background-color: nb-theme(smart-table-paging-hover);
              color: nb-theme(button-outline-success-text-color);
              text-decoration: none;
            }
          }

          &:first-child {
            a, > span {
              @include nb-ltr() {
                border-top-left-radius: nb-theme(smart-table-border-radius);
                border-bottom-left-radius: nb-theme(smart-table-border-radius);
              };
              @include nb-rtl() {
                border-top-right-radius: nb-theme(smart-table-border-radius);
                border-bottom-right-radius: nb-theme(smart-table-border-radius);
              };
            }
          }

          &:last-child {
            a, > span {
              @include nb-ltr() {
                border-top-right-radius: nb-theme(smart-table-border-radius);
                border-bottom-right-radius: nb-theme(smart-table-border-radius);
              };
              @include nb-rtl() {
                border-top-left-radius: nb-theme(smart-table-border-radius);
                border-bottom-left-radius: nb-theme(smart-table-border-radius);
              };
            }
          }

          &.active {
            a, a:hover, a:focus, > span, > span:hover, > span:focus {
              color: nb-theme(smart-table-paging-fg-active);
              background-color: nb-theme(smart-table-paging-bg-active);
            }
          }
        }
      }
    }
  }

}

@mixin card-styles() {

  nb-card {
    overflow: hidden;
    background-color: nb-theme(card-background-color);

    @each $status in nb-get-statuses() {

      &.background-#{$status} {
        nb-card-header {
          border-bottom-color: nb-theme(color-#{$status}-default-border);
        }

        nb-card-footer {
          border-top-color: nb-theme(color-#{$status}-default-border);
        }
      }
    }

    &.background-alternate {
      nb-card-header {
        border-bottom-color: nb-theme(border-alternative-color-3);
      }

      nb-card-footer {
        border-top-color: nb-theme(border-alternative-color-3);
      }
    }

    &.background-disabled {
      nb-card-header {
        border-bottom-color: nb-theme(card-disabled-header-border-color);
      }

      nb-card-footer {
        border-top-color: nb-theme(card-disabled-footer-border-color);
      }
    }

    &.background-hint {
      nb-card-header {
        border-bottom-color: nb-theme(card-hint-header-border-color);
      }

      nb-card-footer {
        border-top-color: nb-theme(card-hint-footer-border-color);
      }
    }

    nb-card-header, nb-card-body, nb-card-footer {
      &.no-padding {
        padding: 0;
      }
    }
  }
}

@mixin progress-bar-styles() {

  nb-progress-bar {
    width: 100%;
  }

}

@mixin tabs-styles() {

  nb-tabset {
    overflow: auto;
  }

}

@mixin space-styles() {

  .space {
    background-color: nb-theme(bg-default-color);
  }
}


@mixin chart-styles() {

  .chart {
    display: block;
    position: relative;
    min-width: 230px;
    min-height: 230px;

    & > div {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    &.pie-chart {
      min-width: 230px;
    }

    //have to set important, because leaflets add relative position for map (when in tabs) by mistake
    & > div[leaflet] {
      position: absolute !important;
    }
  }

}

@mixin background-styles() {

  @each $status in nb-get-statuses() {

    .background-#{$status} {
      background-color: nb-theme(color-#{$status}-default);
    }
  }

  .background-alternate {
    background-color: nb-theme(background-alternative-color-1);
  }

  .background-disabled {
    background-color: nb-theme(bg-disabled-color);
  }

  .background-hint {
    background-color: nb-theme(bg-hint-color);
  }

  .background-transparent {
    background-color: unset;
  }
}



@mixin list-styles() {

  .space nb-list {
    flex-grow: unset;
  }

}


@mixin install-bakery-styles() {
  @include alignment-styles();
  @include text-styles();
  @include icon-styles();
  @include table-styles();
  @include smart-table-styles();
  @include card-styles();
  @include progress-bar-styles();
  @include tabs-styles();
  @include space-styles();
  @include chart-styles();
  @include background-styles();
  @include list-styles();
}
